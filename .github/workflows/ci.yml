name: CI Pipeline

on:
  push:
    branches: [ main, develop, 'epic/*', 'feature/*' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run Prettier check
      run: npm run format:check
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run unit tests
      run: npm run test
      
    - name: Run build
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: |
          .next/
          out/
        retention-days: 1

  security-scan:
    runs-on: ubuntu-latest
    needs: lint-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run dependency check
      run: npx audit-ci --moderate

  e2e-tests:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright
      run: npx playwright install --with-deps
      
    - name: Build application
      run: npm run build
      
    - name: Start application
      run: npm start &
      
    - name: Wait for application
      run: npx wait-on http://localhost:3000
      
    - name: Run E2E tests
      run: npm run test:e2e
      
    - name: Upload E2E results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: e2e-results
        path: |
          test-results/
          playwright-report/

  notify-azure:
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan]
    if: always()
    
    steps:
    - name: Notify Azure DevOps
      uses: Azure/pipelines@v1
      with:
        azure-devops-project-url: '${{ secrets.AZURE_DEVOPS_PROJECT_URL }}'
        azure-pipeline-variables: |
          {
            "build.status": "${{ job.status }}",
            "build.number": "${{ github.run_number }}",
            "commit.sha": "${{ github.sha }}",
            "branch.name": "${{ github.ref_name }}"
          }