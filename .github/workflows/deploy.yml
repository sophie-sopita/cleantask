name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm run test
      
    - name: Build application
      run: npm run build
      
    - name: Create deployment package
      run: |
        mkdir deployment-package
        cp -r .next deployment-package/
        cp -r public deployment-package/
        cp package.json deployment-package/
        cp package-lock.json deployment-package/
        cp next.config.ts deployment-package/
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'cleantask-app'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: './deployment-package'
        
    - name: Notify deployment success
      if: success()
      run: |
        echo "‚úÖ Deployment successful to Azure Web App"
        echo "üåê Application URL: https://cleantask-app.azurewebsites.net"
        
    - name: Notify deployment failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed"
        echo "Check logs for details"

  post-deployment-tests:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Wait for deployment
      run: sleep 60
      
    - name: Run smoke tests
      run: |
        curl -f https://cleantask-app.azurewebsites.net/api/health || exit 1
        echo "‚úÖ Health check passed"
        
    - name: Run production E2E tests
      run: |
        export PLAYWRIGHT_BASE_URL=https://cleantask-app.azurewebsites.net
        npx playwright install --with-deps
        npm run test:e2e:prod
        
    - name: Update Azure DevOps Work Items
      if: success()
      run: |
        echo "üîÑ Updating Azure DevOps Work Items status to 'Deployed'"
        # This would typically use Azure CLI or REST API
        # az boards work-item update --id $WORK_ITEM_ID --state "Deployed"

  rollback:
    runs-on: ubuntu-latest
    needs: [build-and-deploy, post-deployment-tests]
    if: failure()
    
    steps:
    - name: Rollback deployment
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'cleantask-app'
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
        package: './previous-deployment'
        
    - name: Notify rollback
      run: |
        echo "üîÑ Rollback initiated due to deployment failure"
        echo "Previous version restored"